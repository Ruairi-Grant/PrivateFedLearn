Derived from https://github.com/adap/flower/tree/main/examples/embedded-devices

Client test and server test:
for testing connecction between two devices over a network

Embedded-devices:
Following tutorial from https://github.com/adap/flower/tree/main/examples/embedded-devices
Instructions:

# TODO: add the above Instructions
# TODO: see if i can access the model from the server after training
# TODO: the server setting of global local epochs is probably not best practice, look into other ways of doing this

Centralized:
Using squezenet defined in https://github.com/rcmalli/keras-squeezenet
note: the above squeezenet may require keras version 2.XX,
use normalization function from https://stackoverflow.com/questions/68047460/tensorflow-version-of-pytorch-transforms

look into: https://www.kaggle.com/code/ruairigrant/notebookef12ebeb05/edit

# HIGH PRIORITY
# TODO: Include the test data in the test set, this could be either the test set or the val and test set - maybe put the download data script in a seperate script
# TODO: Experiment with bringing the rescaling back, try other scaling and standardization techniques

# LOW PRIORITY
# TODO: Look into using a cache for loaded images
# TODO: Investigate message "filling up shuffle buffer"
# TODO: experiment with techniques to make white stand out more in images
# TODO: experiment with other hyperparamaters
# TODO: Experiment with data augmentation
# TODO: Currently data augmentation is only changing current data, could be worth increasing the amount of data with augmentation



Datasets foldar:
Diabetic reitinopaty data from Dopamine: Differentially Private Federated Learning on Medical Data and https://www.kaggle.com/c/aptos2019-blindness-detection/data
use kaggle competitions download -c aptos2019-blindness-detection to download data
test does not have targets so this cannot be used

Differential Privacy: 
insperation from https://github.com/adap/flower/tree/main/examples/dp-sgd-mnist

Fully Homomorphic encryption:
example here ( may not quite be FHE)
https://github.com/tf-encrypted/tf-encrypted/tree/master/examples/application/federated-learning